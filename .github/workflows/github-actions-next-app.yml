name: CI

on:
  push:
  pull_request:
    branches:
      - main

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout [Pull Request]
        if: ${{ github.event_name == 'pull_request' }}
        with:
          # By default, PRs will be checked-out based on the Merge Commit, but we want the actual branch HEAD.
          ref: ${{ github.event.pull_request.head.sha }}
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0

      - uses: actions/checkout@v3
        name: Checkout [Default Branch]
        if: ${{ github.event_name != 'pull_request' }}
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0

      - name: Setup Remote Tracking
        run: git fetch origin +refs/heads/*:refs/remotes/origin/*

      - name: Use the package manager cache if available
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: nrwl/nx-set-shas@v3
      - run: npm ci

      - name: Lint check
        run: npx nx affected:lint --base=origin/main --head=${{ github.sha }}

      - name: Run Tests
        run: npx nx affected:test --base=origin/main --head=${{ github.sha }}

      - name: Build Next.js App
        run: npm run build:next-app

      - name: Extract version from package.json
        if: github.ref == 'refs/heads/main'
        id: extract_version
        run: |
          echo "::set-output name=version::$(node -p "require('./package.json').version")"

      - name: Build Docker image
        if: github.ref == 'refs/heads/main'
        run: docker build -t dimpap/next-app:${{ steps.extract_version.outputs.version }} -f apps/next-app/Dockerfile .

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push Docker image to Docker Hub
        if: github.ref == 'refs/heads/main'
        run: docker push dimpap/next-app:${{ steps.extract_version.outputs.version }}
