model AuthUser {
    id                    Int                @id @default(autoincrement())
    createdAt             DateTime           @default(now())
    username              String             @unique
    email                 String             @unique
    roles                 AuthRole[]         @default([USER])
    providers             Provider[]
    userChannels          UserChannel[]
    sentNotifications     UserNotification[] @relation("sender")
    receivedNotifications UserNotification[] @relation("receiver")

    @@map(name: "auth_users")
}

model UnRegisteredUser {
    id           Int          @id @default(autoincrement())
    createdAt    DateTime     @default(now())
    token        String       @unique
    email        String       @unique
    profileImage String?
    provider     ProviderEnum

    @@map(name: "unregistered_users")
}

model Provider {
    id           Int          @id @default(autoincrement())
    type         ProviderEnum
    profileImage String?
    userId       Int
    user         AuthUser     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map(name: "providers")
}

enum AuthRole {
    USER
    ADMIN
}

enum ProviderEnum {
    google
    github
}
