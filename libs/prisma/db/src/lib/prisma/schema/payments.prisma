model PaymentCustomer {
    id               Int      @id @default(autoincrement())
    userId           Int      @unique
    stripeCustomerId String   @unique @map("stripe_customer_id")
    createdAt        DateTime @default(now())
    updatedAt        DateTime @updatedAt

    // Relations
    subscriptions Subscription[]

    @@map("stripe_customers")
}

model Subscription {
    id                   Int       @id @default(autoincrement())
    paymentCustomerId    Int       @map("payment_customer_id")
    stripeSubscriptionId String?   @map("stripe_subscription_id")
    priceId              String
    status               String
    currentPeriodStart   DateTime?
    currentPeriodEnd     DateTime?
    trialStart           DateTime?
    trialEnd             DateTime?
    cancelAt             DateTime?
    canceledAt           DateTime?
    createdAt            DateTime  @default(now())
    updatedAt            DateTime  @updatedAt

    // Relations
    paymentCustomer PaymentCustomer @relation(fields: [paymentCustomerId], references: [id])

    @@index([paymentCustomerId])
    @@index([priceId])
    @@map("subscriptions")
}

model Plan {
    id            Int      @id @default(autoincrement())
    stripePriceId String   @unique @map("stripe_price_id") // Ensures priceId uniqueness
    name          String?
    interval      String?
    priceCents    Int      @map("price_cents")
    features      Json?
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt

    @@index([stripePriceId])
    @@map("plans")
}

model StripeWebhookEvent {
    id        Int      @id @default(autoincrement())
    eventId   String   @unique @map("event_id")
    eventType String   @map("event_type")
    createdAt DateTime @default(now())

    @@index([eventId])
    @@map("stripe_webhook_events")
}
