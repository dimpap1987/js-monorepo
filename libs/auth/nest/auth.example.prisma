generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x", "linux-musl", "linux-musl-openssl-3.0.x"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model AuthUser {
    id        Int        @id @default(autoincrement())
    createdAt DateTime   @default(now())
    username  String     @unique
    email     String     @unique
    roles     AuthRole[] @default([USER])
    providers Provider[]

    @@map(name: "auth_users")
}

model UnRegisteredUser {
    id           Int          @id @default(autoincrement())
    createdAt    DateTime     @default(now())
    token        String       @unique
    email        String       @unique
    profileImage String?
    providerEnum ProviderEnum

    @@map(name: "unregistered_users")
}

model Provider {
    id           Int          @id @default(autoincrement())
    type         ProviderEnum
    profileImage String?
    userId       Int
    user         AuthUser     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map(name: "providers")
}

enum AuthRole {
    USER
    ADMIN
}

enum ProviderEnum {
    GOOGLE
    GITHUB
}
