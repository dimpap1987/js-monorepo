version: '3.8'

services:
  my-api:
    image: dimpap/my-api:latest
    container_name: my-api-container
    ports:
      - '3333:3333'
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - ./logs:/usr/src/app/logs
    networks:
      - my-api
    command: >
      sh -c "npx prisma generate --schema=./prisma/schema && node main.js"

  next-app:
    image: dimpap/next-app:latest
    container_name: next-app-container
    ports:
      - '3000:3000'
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - my-api

  postgres:
    image: postgres:16.1-alpine3.19
    container_name: postgres_container
    environment:
      POSTGRES_DB: ${DATABASE_DB}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    restart: unless-stopped
    networks:
      - my-api
    volumes:
      - ${POSTGRES_VOLUME_PATH}:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis-container
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - my-api

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - '8081:8081'
    networks:
      - my-api

networks:
  my-api:
    name: dev_network
