receivers:
  otlp:
    protocols:
      grpc: # Supports gRPC protocol on default port 4317
        endpoint: '0.0.0.0:4317'
      http: # Supports HTTP protocol on port 4318 (what your app is using)
        endpoint: '0.0.0.0:4318'

processors:
  batch:
    # Batching helps with performance
    send_batch_size: 1000
    timeout: 10s

  # Optional: Add attributes processor if you want to add additional tags
  attributes:
    actions:
      - key: environment
        value: production
        action: insert

# exporters:
#   prometheus:
#     endpoint: "0.0.0.0:9464"
#     namespace: "otel"
#     send_timestamps: true
#     metric_expiration: 180m

#   otlp:
#     endpoint: tempo:4317
#     tls:
#       insecure: true

# service:
#   pipelines:
#     traces:
#       receivers: [otlp]
#       processors: [batch, attributes]
#       exporters: [otlp]
#     metrics:
#       receivers: [otlp]
#       processors: [batch, attributes]
#       exporters: [prometheus]

#   # Add telemetry section for collector's own metrics
#   telemetry:
#     logs:
#       level: info

exporters:
  prometheus:
    endpoint: '0.0.0.0:9464' # Listen on all interfaces
    send_timestamps: true

  # For gRPC protocol to Tempo
  otlp/traces:
    endpoint: tempo:4317
    tls:
      insecure: true
  otlphttp/logs:
    endpoint: loki:3100
    tls:
      insecure: true
    headers:
      'X-Scope-OrgID': 'tenant1' # If using multi-tenancy in Loki

  debug/metrics:
    verbosity: detailed
  debug/traces:
    verbosity: detailed
  debug/logs:
    verbosity: detailed

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp/traces] # Updated to match the exporter name
      #exporters: [otlp/traces,debug/traces]
    metrics:
      receivers: [otlp]
      processors: [batch]
      exporters: [prometheus]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlphttp/logs]
      #exporters: [otlphttp/logs,debug/logs]
