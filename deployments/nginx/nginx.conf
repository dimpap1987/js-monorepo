events {
    worker_connections 1024;
}

http {

    # Define the rate limiting zone
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=50r/s;

    geo $banned_ip {
        default 0;  # Allow all by default
        
     # Banned local IP ranges

    }


    # Define trusted Cloudflare IP ranges
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 131.0.72.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;

    # Use CF-Connecting-IP header to get the real client IP address
    real_ip_header CF-Connecting-IP;

    log_format json_analytics escape=json '{'
        '"time_iso8601": "$time_iso8601", ' # local time in the ISO 8601 standard format
        '"request": "$request", ' # full path no arguments if the request
        '"request_uri": "$request_uri", ' # full path and arguments if the request
        '"status": "$status", ' # response status code
        '"request_time": "$request_time", ' # request processing time in seconds with msec resolution
        '"remote_addr": "$remote_addr", ' # client IP
        '"remote_port": "$remote_port", ' # client port
        '"http_user_agent": "$http_user_agent", ' # user agent
        '"body_bytes_sent": "$body_bytes_sent", ' # the number of body bytes exclude headers sent to a client
        '"http_referer": "$http_referer", ' # HTTP referer
        '"http_host": "$http_host", ' # the request Host: header
        '"server_name": "$server_name", ' # the name of the vhost serving the request
        '"upstream": "$upstream_addr", ' # upstream backend server for proxied requests
        '"upstream_response_time": "$upstream_response_time", ' # time spent receiving upstream body
        '"ssl_protocol": "$ssl_protocol", ' # TLS protocol
        '"ssl_cipher": "$ssl_cipher", ' # TLS cipher
        '"scheme": "$scheme", ' # http or https
        '"request_method": "$request_method", ' # request method
        '"server_protocol": "$server_protocol", ' # request protocol, like HTTP/1.1 or HTTP/2.0
        '"msec": "$msec", ' # request unixtime in seconds with a milliseconds resolution
        '"connection": "$connection", ' # connection serial number
        '"connection_requests": "$connection_requests", ' # number of requests made in connection
        '"pid": "$pid", ' # process pid
        '"request_id": "$request_id", ' # the unique request id
        '"request_length": "$request_length", ' # request length (including headers and body)
        '"upstream_connect_time": "$upstream_connect_time", ' # upstream handshake time incl. TLS
        '"upstream_header_time": "$upstream_header_time"' # time spent receiving upstream headers
        '}';

    access_log /dev/stdout json_analytics;


    upstream api {
       server my-api:3333;
   }

    upstream ui {
        server next-app:3000;
    }

    # Include server configurations from conf.d directory
    include /etc/nginx/conf.d/*.conf;
}